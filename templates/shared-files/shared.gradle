/*
 * Copyright 2008-2015 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'uk.co.cacoethes.lazybones-templates'

if (!project.hasProperty('bintrayUsername')) ext.bintrayUsername = ''
if (!project.hasProperty('bintrayApiKey')) ext.bintrayApiKey = ''

lazybones {
    repositoryName = 'basilisk/basilisk-lazybones-templates'
    repositoryUsername = project.bintrayUsername
    repositoryApiKey = project.bintrayApiKey
}

tasks.withType(Zip) { task ->
    task.doFirst {
        File destDir = task.source.files.iterator().next().parentFile
        copy {
            into destDir
            if (destDir.name.startsWith('subtmpl-')) {
                // continue
            } else if (destDir.name == 'basilisk-plugin') {
                from(rootProject.file('templates/shared-files/sources')) {
                    exclude 'src'
                    exclude 'maven'
                    exclude 'settings.gradle'
                    exclude 'gradle/package.gradle'
                    filter(org.apache.tools.ant.filters.ReplaceTokens,
                        tokens: ['basilisk.version': project.version])
                }
            } else {
                from(rootProject.file('templates/shared-files/sources')) {
                    exclude '**/*.png'
                    exclude '**/*.jar'
                    filter(org.apache.tools.ant.filters.ReplaceTokens,
                        tokens: ['basilisk.version': project.version])
                }
                from(rootProject.file('templates/shared-files/sources')) {
                    include '**/*.png'
                    include '**/*.jar'
                }
                from(rootProject.file('src/media')) {
                    include 'basilisk*'
                    into 'src/media'
                }
                from(rootProject.file('src/javadoc')) {
                    into 'src/javadoc'
                }
            }
        }

        if (file("sources/${destDir.name}").exists()) {
            copy {
                into destDir
                from(file("sources/${destDir.name}"))
            }
        }
    }
}