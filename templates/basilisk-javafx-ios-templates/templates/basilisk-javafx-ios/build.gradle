buildscript {
    repositories {
        jcenter()
        mavenLocal()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    }

    dependencies {
        classpath 'org.kordamp.basilisk:gradle-basilisk-plugin:0.1.0-SNAPSHOT'
        classpath 'nl.javadude.gradle.plugins:license-gradle-plugin:0.11.0'
        classpath 'org.gradle.api.plugins:gradle-izpack-plugin:0.2.3'
        classpath 'com.github.cr0:gradle-macappbundle-plugin:3.1.0'
        classpath 'org.kordamp.gradle:stats-gradle-plugin:0.1.5'
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.11.3'
        classpath 'org.javafxports:jfxmobile-plugin:1.0.3'
    }
}

apply plugin: 'groovy'
apply plugin: 'org.kordamp.basilisk'
apply plugin: 'org.javafxports.jfxmobile'

repositories {
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
}

basilisk {
    disableDependencyResolution = false
    version = '${basilisk_version}'
}

ext {
    macosx = System.getProperty('os.name').contains('Mac OS')
}

mainClassName = '${project_package}.Launcher'

apply from: 'gradle/publishing.gradle'
apply from: 'gradle/code-coverage.gradle'
apply from: 'gradle/code-quality.gradle'
apply from: 'gradle/integration-test.gradle'
apply from: 'gradle/functional-test.gradle'
apply from: 'gradle/package.gradle'
apply from: 'gradle/docs.gradle'
apply plugin: 'org.kordamp.gradle.stats'
apply plugin: 'com.github.ben-manes.versions'

dependencies {
    compile "org.kordamp.basilisk:basilisk-guice:\${basilisk.version}"

    runtime 'org.slf4j:slf4j-simple:1.7.13'

    testCompile "org.kordamp.basilisk:basilisk-javafx-test:\${basilisk.version}"
    testCompile "org.codehaus.groovy:groovy-all:\${groovyVersion}"
    testCompile "org.spockframework:spock-core:\${spockVersion}"

    functionalTestCompile "org.kordamp.basilisk:basilisk-javafx-test:\${basilisk.version}"

    retrolambdaConfig 'net.orfjackal.retrolambda:retrolambda:2.0.6'
}

compileGroovy.enabled = false

tasks.withType(JavaCompile) {
    sourceCompatibility = project.sourceCompatibility
    targetCompatibility = project.targetCompatibility
}

tasks.withType(GroovyCompile) {
    sourceCompatibility = project.sourceCompatibility
    targetCompatibility = project.targetCompatibility
}

jfxmobile {
    ios {
        forceLinkClasses = ['${project_package}.**.*', 'basilisk.**.*', 'org.kordamp.basilisk.**.*']
    }
}

// The following task is needed because Retrolambda places META-INF files at
// build/retrolambda/main but they should be at build/classes/main
// hardcoding paths for now
task copyMetainf << {
    copy {
        from project.file("\${buildDir}/retrolambda/main")
        into project.file("\${buildDir}/classes/main")
    }
}

classes.finalizedBy copyMetainf

